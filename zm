#!/usr/bin/python

import sys, getopt, json, os.path, re, base64, requests

def main(argv):
   create = ''
   add = ''
   delete = ''
   token = ''
   host = ''

   try:
      opts, args = getopt.gnu_getopt(argv, "h:c:a:d:t:", ["host=", "create=", "add=", "delete=", "token="])
   except getopt.GetoptError:
      usage(2)

   if len(args) == 0:
      list = ''
   elif len(args) == 1:
      list = args[0]
   else:
      usage(2)
      
   for opt, arg in opts:
      if opt in ("-c", "--create"):
         create = arg
      elif opt in ("-a", "--add"):
         add = arg
      elif opt in ("-d", "--delete"):
         delete = arg
      elif opt in ("-t", "--token"):
         token = arg
      elif opt in ("-h", "--host"):
         host = arg

   if create:
      if list:
         usage(2);
      else:
         list = create
   
   if not token and os.path.isfile(os.path.expanduser('~/.zm')):
      f = open(os.path.expanduser('~/.zm'), 'r')
      token = f.read().strip()

   if not token:
      print 'Error: token is required\n'
      sys.exit(2)

   protocol = 'https'
   domain = 'api.zeromailer.com'
   urlbase = '/v1/lists'
   
   m = re.compile('(.*)@(.*)').match(list)

   if m:
      list = m.group(1)
      listdomain = m.group(2).lower()
      if listdomain != 'zeromailer.com' and listdomain != '0mailer.com':
         urlbase = '/api/v1/lists'
         protocol = 'http'
         domain = listdomain

   if host:
      domain = host
      urlbase = '/api/v1/lists'
      protocol = 'http'

   postdata = {}

   if not list:
      if not add and not delete:
         url = urlbase
         method = 'GET'
      else:
         usage(2)
         
   elif not create:
      url = urlbase + '/' + list

      if not add and not delete:
         method = 'GET'
      elif add and not delete:
         url = url + '/emails'
         method = 'POST'
         postdata['value'] = add
      elif delete and not add:
         url = url + '/emails/' + delete
         method = 'DELETE'
      else:
         usage(2)
   elif not delete:
      url = urlbase
      method = 'POST'
      postdata['name'] = create
      postdata['emails'] = add
   else:
      usage(2)

   #print protocol, domain, url, method, urllib.urlencode(postdata), headers 
   
   if method == 'GET':
      r = requests.get(protocol + '://' + domain + url, auth=(token, ''))
   elif method == 'POST':
      r = requests.post(protocol + '://' + domain + url, postdata, auth=(token, ''))
   elif method == 'DELETE':
      r = requests.delete(protocol + '://' + domain + url, auth=(token, ''))
   try:
      print json.dumps(json.loads(r.text), indent=4)
   except:
      print r.text

def usage(code):
      print sys.argv[0], '[(-c|--create)] [listname] [(-h|--host) listdomain] [(-a|--add) email@domain] [(-d|--delete) email@domain] [(-t|--token) apitoken]'
      sys.exit(code)

if __name__ == "__main__":
   main(sys.argv[1:])

